---
title: "Personal Highlights: Positconf 2023"
author: "Chi Zhang"
description: |
  Curation of content to check out when I've got time
date: "2023-09-21"
categories: [Data science]
title-block-banner: false
format: 
  html:
    toc: true
    toc-depth: 2
    code-fold: false
    code-tools: false
---

The yearly party of Positconf (formerly Rstudio conf) has come to an end. I joined the virtual experience at home, it is of course not the same as attending in-person, yet the atmosphere in discord was still great!

It's hard to choose which talks to watch since multiple were scheduled at the same time, so one has to prioritize. I definitely will re-visit some of the talks at a later point, so this blog acts as a placeholder for links so that I can find them in the future. 

## Make interactive things

WebDev is definitely a big thing at this year's positconf. If I'm learning one thing from the conference, I'd check out **webR**.

I still remember when R was mainly for statistical analysis and computing back when I learned it. Now it's become much more fun! Strictly speaking, `webR`and `quarto` are not R per se. However, they've become the gateway drugs for R programmers to dabble in WebDev. With **web assembly (wasm)**, now one can execute R code in a browser and even run shiny app.

*Unlock the power of dataViz animation and interactivity in quarto* by Deepsha Menghani used a super fun example (F-bomb) to demonstrate how to add interactivity to your barplot (or other plots) with [Crosstalk](https://rstudio.github.io/crosstalk/). Check out the talk [here](https://github.com/deepshamenghani/posit_plotly_crosstalk). The presentation was as interactive as the quarto slides, good job Deepsha!


*Running shiny without a server* by Joe Cheng ([repo](https://github.com/jcheng5/posit-conf-2023-shinylive)): this was a big announcement. I used shiny at work, but for my own projects or smaller teaching projects I tried to stay away from shiny - I was concerned about the fee. This looks like a promising thing to try out once it's stable, although I'd probably do **webR** first.


## Make pretty things

It is fascinating to see so many organizations and individual R developers make their own themes for better branding, recognition and storytelling. More and more peple have realized that making beautiful plots is important, and totally possible as well. Work on **layout, color, font and sizes**!

### Themes

*Adding a touch of glitr: Developing a package of themes on top of ggplot* by Aaron Chafetz, Karishma Srikanth and colleagues at USAID. [repo](https://github.com/USAID-OHA-SI/glitr)

### Tables

Making tables with `gt` has been on my to-do list for a while now. It is very inspiring to see so many cool tables that makes you wonder, "is it really JUST a table?" For example, check out this [gallery](https://community.rstudio.com/c/table-gallery/64) by Posit community.

The book [Creating beautiful tables in R with `gt`](https://gt.albert-rapp.de) by Albert Rapp would be a good place to learn how to make nice tables. Actually the reason why I wanted to use `gt` is that it seems to be the mainsteam in clinical reporting in pharma. I bumped into this [blog post](https://posit.co/blog/the-many-reasons-that-pharmas-love-gt/) some time ago, and this would be my starting point.

### Quarto

If you want to go one step further and start making your quarto project pretty, there are a few things to try out. 

Albert Rapp in his talk *HTML and CSS for R Users* stated that quarto is a gateway drug to WebDev. It reminds me of my very first presentation at my local R users community (2019) was about building a website with `blogdown`, and when I really spent a lot of time to make my markdown documentation colorful with `span style` - and that was about everything I knew. 

Now I want more. Learning HTML and CSS can make your dataviz, tables, slides and dashboards look not only professional but also special. I'm going to check out the *scss variables* in quarto which defines the theme, `theme_file.scss`. 
Emil Hvitfeldt (*Styling and templating quarto documents*) showed us how to make really pretty and animated (!) quarto sldies themes, and shared this template with us, [quarto-revealjs-earth](https://emilhvitfeldt.github.io/quarto-revealjs-earth/#/theme-title1). I really like how revealjs slides look like, just that the MacOS Keynote (or MS ppt) drag-and-drop seems more flexible to me (?) Guess it's something I should get used to over time. 

Richard Iannone (*Extending quarto*) introduced quarto **shortcode extensions** to add a bunch of fancy-looking icons to quarto files. To create extensions in general: https://quarto.org/docs/extensions/creating. This is for more pro-users since you needs to learn lua. 


## Quarto updates

Quarto is definitely one of the most discussed topics in the year 2022-2023 in the R community. For good reasons. I need to catch up the the latest developments annd use-cases:

* [What's new in quarto?](https://cwickham.github.io/whats-new-in-quarto/#/title-slide) by Charlotte Wickham
* [Reproducible manuscripts with Quarto](https://mine.quarto.pub/manuscripts-conf23/#/title-slide) by Mine Ã‡etinkaya-Rundel
* [Parametrized quarto reports improves understanding of soil health](https://rawcdn.githack.com/WA-Department-of-Agriculture/soils/944448976992604a12dafbf47258327be0e5ab98/inst/example_reports/example_producer_report.html) by Jadey Ryan

and so many more. I couldn't follow all the talks and I'm sure there are lots of great examples of how quarto is better than traditional ways of reporting.


## A few other things to check out

Beyond the web and quarto topics, I think there are some existing and new tools that can be useful for my work. For example,

* I should review Hadley and Jenny's R package book (2e). 
* this package `targets` for pipeline automation and management look like something that can be used for my analysis
* ...


It will take a while to digest the latest developments. But little by little, we'll get there! People in the R community are doing great things.



